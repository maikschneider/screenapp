<!DOCTYPE html>
<html>
  <head>
    <title><%= screen.name %> &#9658; Playlist<%= screen.list %> </title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/app.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/screen.css">
    <!--STYLES END-->
  </head>
<body>

  <main style="width:<%= playlist.items.length %>00vw">
    <div class="row expanded">
    <% for(var i=0; i<playlist.items.length; i++){ %>
      <section class="columns slide">
        <h1>Slide <%= i+1 %></h1>
      </section>
    <% } %>
  </main>

  <script src="/js/dependencies/sails.io.js"></script>
  <script src="/bower_components/jquery/dist/jquery.min.js"></script>
  <script src="/bower_components/foundation-sites/dist/foundation.min.js"></script>
  <script type="text/javascript">

  io.socket.get('/screen/live/<%= screen.id %>', function(body, response){
    console.log('Started BroadcastService for the following Playlist: ', body);
  });

  // io.socket.on('playlist', function (event) {
  //   console.log('Playlist changed: ', event);
  // });

  // // Subscribe to changes on the current playlist
  // io.socket.get('/playlist/<%= screen.list %>', function(resData, jwres) {
  //   console.log('The Playlist: ', resData);
  // });

  // io.socket.on('playlistitem', function(data){
  //   console.log('PlaylistItem changed:', data);
  // });

  // // Subscribe to all PlaylistItems on this playlist
  // io.socket.get('/playlist/<%= screen.list %>/items', function(resData, jwres) {
  //   console.log('The PlaylistItems: ', resData);
  // });

  // io.socket.on('playlistsocket<%= screen.list %>', function(data){
  //   console.log('slideChange: ', data);
  // });


  io.socket.on('slideChange', function (data){
    console.log('slideChange', data);
    $.Slider.slideChange(1);
  });

  $.Slider = {
    slideChange: function(index) {
      var marginLeft = -100 * index;
      $('main').css('marginLeft', marginLeft+'vw');
    }
  }


  </script>
</body>
</html>
